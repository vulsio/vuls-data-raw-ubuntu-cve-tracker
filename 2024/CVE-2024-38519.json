{
	"candidate": "CVE-2024-38519",
	"description": "`yt-dlp` and `youtube-dl` are command-line audio/video downloaders. Prior to the fixed versions,Â `yt-dlp` and `youtube-dl` do not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` and `youtube-dl` also read config from the working directory (and on Windows executables will be executed from the `yt-dlp` or `youtube-dl` directory), this could lead to arbitrary code being executed. `yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions. `youtube-dl` fixes this issue in commit `d42a222` on the `master` branch and in nightly builds tagged 2024-07-03 or later. This might mean some very uncommon extensions might not get downloaded, however it will also limit the possible exploitation surface. In addition to upgrading, have `.%(ext)s` at the end of the output template and make sure the user trusts the websites that they are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like one's user directory, `system32`, or other binaries locations. For users who are not able to upgrade, keep the default output template (`-o \"%(title)s [%(id)s].%(ext)s`); make sure the extension of the media to download is a common video/audio/sub/... one; try to avoid the generic extractor; and/or use `--ignore-config --config-location ...` to not load config from common locations.",
	"priority": "medium",
	"references": [
		"https://www.cve.org/CVERecord?id=CVE-2024-38519",
		"https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j",
		"https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a",
		"https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01",
		"https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp"
	],
	"public_date": "2024-07-02 14:15:00 UTC",
	"packages": {
		"devel": {
			"yt-dlp": {
				"name": "yt-dlp",
				"status": "needs-triage"
			}
		},
		"esm-apps/jammy": {
			"yt-dlp": {
				"name": "yt-dlp",
				"status": "needs-triage"
			}
		},
		"esm-apps/noble": {
			"yt-dlp": {
				"name": "yt-dlp",
				"status": "needs-triage"
			}
		},
		"focal": {
			"yt-dlp": {
				"name": "yt-dlp",
				"status": "DNE"
			}
		},
		"jammy": {
			"yt-dlp": {
				"name": "yt-dlp",
				"status": "needs-triage"
			}
		},
		"mantic": {
			"yt-dlp": {
				"name": "yt-dlp",
				"status": "needs-triage"
			}
		},
		"noble": {
			"yt-dlp": {
				"name": "yt-dlp",
				"status": "needs-triage"
			}
		},
		"upstream": {
			"yt-dlp": {
				"name": "yt-dlp",
				"status": "needs-triage"
			}
		}
	}
}
